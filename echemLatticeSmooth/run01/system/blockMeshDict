/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  4.0                                   |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 0.001;

L1      2;
Lx      20;
Ly      5;
Lz      16;    
Lin     1;
Lout    10;

delta   #calc "1.0/8.0";   //grid size in mm

x1      #calc "$L1";
x2      #calc "$L1+$Lx";
x3      #calc "2.*$L1+$Lx";
z1      #calc "$L1";
z2      #calc "$L1+$Lz";
z3      #calc "2.*$L1+$Lz";
y1      #calc "$Ly";
y2      #calc "-1.*$Lin";
y3      #calc "-1.*$Lout";

nL1     #calc "round($L1/$delta)";
nLx     #calc "round($Lx/$delta)";
nLy     #calc "round($Ly/$delta)";
nLz     #calc "round($Lz/$delta)";
nLin   #calc "8*round($Lin/$delta)";
nLout   #calc "2*round($Lout/$delta)";


vertices
(
    ( 0   0   0   )
    ( $x1 0   0   )
    ( $x1 0   $z1 )
    ( 0   0   $z1 )
    ( 0   $y1 0   )
    ( $x1 $y1 0   )
    ( $x1 $y1 $z1 )
    ( 0   $y1 $z1 )
    ( $x2 0   0   )
    ( $x2 0   $z1 )
    ( $x2 $y1 0   )
    ( $x2 $y1 $z1 )
    ( $x3 0   0   )
    ( $x3 0   $z1 )
    ( $x3 $y1 0   )
    ( $x3 $y1 $z1 )
    ( 0   0   $z2 )
    ( $x1 0   $z2 )    
    ( 0   $y1 $z2 )
    ( $x1 $y1 $z2 )
    ( $x2 0   $z2 )
    ( $x2 $y1 $z2 )    
    ( $x3 0   $z2 )
    ( $x3 $y1 $z2 )
    ( 0   0   $z3 )
    ( $x1 0   $z3 )
    ( $x2 0   $z3 )    
    ( $x3 0   $z3 )                
    ( 0   $y1 $z3 )
    ( $x1 $y1 $z3 )
    ( $x2 $y1 $z3 )    
    ( $x3 $y1 $z3 )
    ( 0   $y2 0   )
    ( $x1 $y2 0   )
    ( $x1 $y2 $z1 )
    ( 0   $y2 $z1 )    
    ( $x2 $y3 $z2 )
    ( $x3 $y3 $z2 )                
    ( $x3 $y3 $z3 )                
    ( $x2 $y3 $z3 )        
);

blocks
(
    hex (0 1 5 4 3 2 6 7) ($nL1 $nLy $nL1) simpleGrading (1 1 1)
    hex (1 8 10 5 2 9 11 6) ($nLx $nLy $nL1) simpleGrading (1 1 1)
    hex (8 12 14 10 9 13 15 11) ($nL1 $nLy $nL1) simpleGrading (1 1 1)
    hex (3 2 6 7 16 17 19 18) ($nL1 $nLy $nLz) simpleGrading (1 1 1)
    hex (2 9 11 6 17 20 21 19) ($nLx $nLy $nLz) simpleGrading (1 1 1)                                            
    hex (9 13 15 11 20 22 23 21) ($nL1 $nLy $nLz) simpleGrading (1 1 1)
    hex (16 17 19 18 24 25 29 28) ($nL1 $nLy $nL1) simpleGrading (1 1 1)
    hex (17 20 21 19 25 26 30 29) ($nLx $nLy $nL1) simpleGrading (1 1 1)    
    hex (20 22 23 21 26 27 31 30) ($nL1 $nLy $nL1) simpleGrading (1 1 1)
    hex (32 33 1 0 35 34 2 3) ($nL1 $nLin $nL1) simpleGrading (1 0.125 1)
    hex (36 37 22 20 39 38 27 26) ($nL1 $nLout $nL1) simpleGrading (1 0.125 1)        
);

edges
(
);

boundary
(
    inlet
    {
        type patch;
        faces
        (            
            (32 33 34 35)
        );
    }
        
    walls    
    {   type wall;
        faces
        (         
            (7 4 0 3)
            (13 12 14 15)
            (7 6 5 4)            
            (11 15 14 10)
            (8 12 13 9)       
            (3 2 17 16)
            (9 13 22 20)
            (18 19 6 7)
            (21 23 15 11)
            (16 18 7 3)
            (22 13 15 23)
            (16 17 25 24)
            (16 24 28 18)
            (28 29 19 18)
            (30 31 23 21)
            (27 22 23 31)
            (0 1 33 32)
            (1 2 34 33)
            (2 3 35 34)
            (3 0 32 35)
            (38 37 22 27)
            (20 22 37 36)
            (26 20 36 39)
            (27 26 39 38)     
        );
    }
        
    top
    {   type wall;
        faces
        (            
            (6 11 10 5)
            (19 21 11 6)
            (29 30 21 19)
        );
    }
    
    outlet
    {   type wall;
        faces
        (
            (36 37 38 39)
        );
    }
    btm
    {
        type wall;
        faces
        (
            (1 8 9 2)
            (2 9 20 17)
            (17 20 26 25)            
        );
    }
    front
    {
        type wall;
        faces
        (
            (24 25 29 28)
            (25 26 30 29)
            (26 27 31 30)
        );
    }    
    back
    {
        type wall;
        faces
        (
            (4 5 1 0)
            (5 10 8 1)
            (10 14 12 8)        
        );
    }    
);


mergePatchPairs
(
);

// ************************************************************************* //
